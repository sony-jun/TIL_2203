N, M = map(int, input().split())
V = [0 for _ in range(N + 1)]
G = [[] for _ in range(N + 1)]
for _ in range(M):
    a, b = map(int, input().split())
    G[a].append(b)
    G[b].append(a)

ST = []


def DFS(cur):
    print(f"현재 정점: {cur}, 현재 탐색하고 있는 경로: {ST}")
    for next in G[cur]:
        # DFS 역시 모든 정점을 한 번씩만 방문해야 하므로, 이미 방문한 정점은 건너뜁니다.
        if V[next]:
            continue
        # 실제로 스택을 사용할 필요는 없지만, DFS의 동작 과정을 보여주기 위해 스택을 사용했습니다.
        ST.append(next)
        V[next] = 1
        DFS(next)
    ST.pop()
    print(f"더 탐색할 수 있는 경로가 없으므로 pop, 현재 탐색하고 있는 경로: {ST}")


ST.append(1)
V[1] = 1
DFS(1)

"""
INPUT
6 6
1 2
1 4
2 3
2 5
2 6
4 5

OUTPUT
현재 정점: 1, 현재 탐색하고 있는 경로: [1]
현재 정점: 2, 현재 탐색하고 있는 경로: [1, 2]
현재 정점: 3, 현재 탐색하고 있는 경로: [1, 2, 3]
더 탐색할 수 있는 경로가 없으므로 pop, 현재 탐색하고 있는 경로: [1, 2]
현재 정점: 5, 현재 탐색하고 있는 경로: [1, 2, 5]
현재 정점: 4, 현재 탐색하고 있는 경로: [1, 2, 5, 4]
더 탐색할 수 있는 경로가 없으므로 pop, 현재 탐색하고 있는 경로: [1, 2, 5]
더 탐색할 수 있는 경로가 없으므로 pop, 현재 탐색하고 있는 경로: [1, 2]
현재 정점: 6, 현재 탐색하고 있는 경로: [1, 2, 6]
더 탐색할 수 있는 경로가 없으므로 pop, 현재 탐색하고 있는 경로: [1, 2]
더 탐색할 수 있는 경로가 없으므로 pop, 현재 탐색하고 있는 경로: [1]
더 탐색할 수 있는 경로가 없으므로 pop, 현재 탐색하고 있는 경로: []
"""
